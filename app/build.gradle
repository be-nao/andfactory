apply plugin: 'com.android.application'

apply plugin: 'kotlin-android'

apply plugin: 'kotlin-android-extensions'

apply plugin: "kotlin-kapt"

android {
    compileSdkVersion 29
    buildToolsVersion "29.0.2"
    defaultConfig {
        applicationId "com.example.andfactory"
        minSdkVersion 21
        targetSdkVersion 29
        versionCode 1
        versionName "1.0"
        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"

        buildConfigField "String", "BASE_URL", "\"https://api.github.com/\""
    }
    dataBinding {
        enabled = true
    }
    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
        }
    }
}

def dagger_version = "2.25.4"
def retrofit_ver = "2.6.2"
def okhttp_ver = "4.0.1"
def navigation_ver = "2.1.0"
def coroutine_ver = "1.3.3"
def epoxy_version = '3.8.0'
def moshi_ver = '1.8.0'
def room_ver = "2.2.0-rc01"

dependencies {
    implementation fileTree(dir: 'libs', include: ['*.jar'])
    implementation"org.jetbrains.kotlin:kotlin-stdlib-jdk7:$kotlin_version"
    implementation 'androidx.appcompat:appcompat:1.1.0'
    implementation 'androidx.core:core-ktx:1.1.0'
    implementation 'androidx.constraintlayout:constraintlayout:1.1.3'
    implementation 'androidx.lifecycle:lifecycle-extensions:2.1.0'
    implementation 'androidx.lifecycle:lifecycle-viewmodel-ktx:2.1.0'
    testImplementation 'junit:junit:4.12'
    androidTestImplementation 'androidx.test.ext:junit:1.1.1'
    androidTestImplementation 'androidx.test.espresso:espresso-core:3.2.0'

    // Dagger2
    implementation "com.google.dagger:dagger-android:$dagger_version"
    implementation "com.google.dagger:dagger-android-support:$dagger_version"
    kapt "com.google.dagger:dagger-android-processor:$dagger_version"
    kapt "com.google.dagger:dagger-compiler:$dagger_version"

    // Retrofit2
    implementation "com.squareup.retrofit2:retrofit:$retrofit_ver"
    implementation "com.squareup.retrofit2:converter-moshi:$retrofit_ver"

    // OkHttp3
    implementation "com.squareup.okhttp3:okhttp:$okhttp_ver"
    implementation "com.squareup.okhttp3:logging-interceptor:$okhttp_ver" // ログ出力

    // moshi
    implementation "com.squareup.moshi:moshi:$moshi_ver"
    implementation "com.squareup.moshi:moshi-kotlin:$moshi_ver"

    // Navigation
    implementation "androidx.navigation:navigation-fragment:$navigation_ver"
    implementation "androidx.navigation:navigation-ui:$navigation_ver"
    implementation "androidx.navigation:navigation-fragment-ktx:$navigation_ver"
    implementation "androidx.navigation:navigation-ui-ktx:$navigation_ver"

    // Coroutine
    implementation "org.jetbrains.kotlinx:kotlinx-coroutines-core:$coroutine_ver"
    implementation "org.jetbrains.kotlinx:kotlinx-coroutines-android:$coroutine_ver"

    // Coroutine Adapter
    implementation "com.jakewharton.retrofit:retrofit2-kotlin-coroutines-adapter:0.9.2"

    // epoxy
    implementation "com.airbnb.android:epoxy-paging:$epoxy_version"
    implementation "com.airbnb.android:epoxy:$epoxy_version"
    implementation "com.airbnb.android:epoxy-databinding:$epoxy_version"
    kapt "com.airbnb.android:epoxy-processor:$epoxy_version"

    // Room
    annotationProcessor "androidx.room:room-compiler:$room_ver" // For Kotlin use kapt instead of annotationProcessor
    implementation "androidx.room:room-ktx:$room_ver" // optional - Kotlin Extensions and Coroutines support for Room
    testImplementation "androidx.room:room-testing:$room_ver" // Test helpers
}

